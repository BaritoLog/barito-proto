// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: producer/producer.proto

package producer

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Timber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context   *TimberContext   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Timestamp string           `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Content   *structpb.Struct `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Timber) Reset() {
	*x = Timber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_producer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timber) ProtoMessage() {}

func (x *Timber) ProtoReflect() protoreflect.Message {
	mi := &file_producer_producer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timber.ProtoReflect.Descriptor instead.
func (*Timber) Descriptor() ([]byte, []int) {
	return file_producer_producer_proto_rawDescGZIP(), []int{0}
}

func (x *Timber) GetContext() *TimberContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Timber) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Timber) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

type TimberCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context *TimberContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Items   []*Timber      `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *TimberCollection) Reset() {
	*x = TimberCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_producer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimberCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimberCollection) ProtoMessage() {}

func (x *TimberCollection) ProtoReflect() protoreflect.Message {
	mi := &file_producer_producer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimberCollection.ProtoReflect.Descriptor instead.
func (*TimberCollection) Descriptor() ([]byte, []int) {
	return file_producer_producer_proto_rawDescGZIP(), []int{1}
}

func (x *TimberCollection) GetContext() *TimberContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *TimberCollection) GetItems() []*Timber {
	if x != nil {
		return x.Items
	}
	return nil
}

type TimberContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KafkaTopic             string `protobuf:"bytes,1,opt,name=kafka_topic,json=kafkaTopic,proto3" json:"kafka_topic,omitempty"`
	KafkaPartition         int32  `protobuf:"varint,2,opt,name=kafka_partition,json=kafkaPartition,proto3" json:"kafka_partition,omitempty"`
	KafkaReplicationFactor int32  `protobuf:"varint,3,opt,name=kafka_replication_factor,json=kafkaReplicationFactor,proto3" json:"kafka_replication_factor,omitempty"`
	EsIndexPrefix          string `protobuf:"bytes,4,opt,name=es_index_prefix,json=esIndexPrefix,proto3" json:"es_index_prefix,omitempty"`
	EsDocumentType         string `protobuf:"bytes,5,opt,name=es_document_type,json=esDocumentType,proto3" json:"es_document_type,omitempty"`
	AppMaxTps              int32  `protobuf:"varint,6,opt,name=app_max_tps,json=appMaxTps,proto3" json:"app_max_tps,omitempty"`
	AppSecret              string `protobuf:"bytes,7,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	TpsType                string `protobuf:"bytes,8,opt,name=tps_type,json=tpsType,proto3" json:"tps_type,omitempty"`
}

func (x *TimberContext) Reset() {
	*x = TimberContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_producer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimberContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimberContext) ProtoMessage() {}

func (x *TimberContext) ProtoReflect() protoreflect.Message {
	mi := &file_producer_producer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimberContext.ProtoReflect.Descriptor instead.
func (*TimberContext) Descriptor() ([]byte, []int) {
	return file_producer_producer_proto_rawDescGZIP(), []int{2}
}

func (x *TimberContext) GetKafkaTopic() string {
	if x != nil {
		return x.KafkaTopic
	}
	return ""
}

func (x *TimberContext) GetKafkaPartition() int32 {
	if x != nil {
		return x.KafkaPartition
	}
	return 0
}

func (x *TimberContext) GetKafkaReplicationFactor() int32 {
	if x != nil {
		return x.KafkaReplicationFactor
	}
	return 0
}

func (x *TimberContext) GetEsIndexPrefix() string {
	if x != nil {
		return x.EsIndexPrefix
	}
	return ""
}

func (x *TimberContext) GetEsDocumentType() string {
	if x != nil {
		return x.EsDocumentType
	}
	return ""
}

func (x *TimberContext) GetAppMaxTps() int32 {
	if x != nil {
		return x.AppMaxTps
	}
	return 0
}

func (x *TimberContext) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *TimberContext) GetTpsType() string {
	if x != nil {
		return x.TpsType
	}
	return ""
}

type ProduceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *ProduceResult) Reset() {
	*x = ProduceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_producer_producer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProduceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProduceResult) ProtoMessage() {}

func (x *ProduceResult) ProtoReflect() protoreflect.Message {
	mi := &file_producer_producer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProduceResult.ProtoReflect.Descriptor instead.
func (*ProduceResult) Descriptor() ([]byte, []int) {
	return file_producer_producer_proto_rawDescGZIP(), []int{3}
}

func (x *ProduceResult) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

var File_producer_producer_proto protoreflect.FileDescriptor

var file_producer_producer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8c, 0x01, 0x0a, 0x06, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x6d,
	0x0a, 0x10, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x54,
	0x69, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e,
	0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbf, 0x02,
	0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x27, 0x0a, 0x0f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6b, 0x61, 0x66, 0x6b, 0x61,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x6b, 0x61, 0x66,
	0x6b, 0x61, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6b, 0x61, 0x66,
	0x6b, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x73, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x73, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x74, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x70, 0x70, 0x4d,
	0x61, 0x78, 0x54, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x70, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x70, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x25, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x32, 0xb5, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x5e,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x62, 0x65, 0x72,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x42, 0x35,
	0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42, 0x61, 0x72,
	0x69, 0x74, 0x6f, 0x4c, 0x6f, 0x67, 0x2f, 0x62, 0x61, 0x72, 0x69, 0x74, 0x6f, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x3b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_producer_producer_proto_rawDescOnce sync.Once
	file_producer_producer_proto_rawDescData = file_producer_producer_proto_rawDesc
)

func file_producer_producer_proto_rawDescGZIP() []byte {
	file_producer_producer_proto_rawDescOnce.Do(func() {
		file_producer_producer_proto_rawDescData = protoimpl.X.CompressGZIP(file_producer_producer_proto_rawDescData)
	})
	return file_producer_producer_proto_rawDescData
}

var file_producer_producer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_producer_producer_proto_goTypes = []any{
	(*Timber)(nil),           // 0: producer.Timber
	(*TimberCollection)(nil), // 1: producer.TimberCollection
	(*TimberContext)(nil),    // 2: producer.TimberContext
	(*ProduceResult)(nil),    // 3: producer.ProduceResult
	(*structpb.Struct)(nil),  // 4: google.protobuf.Struct
}
var file_producer_producer_proto_depIdxs = []int32{
	2, // 0: producer.Timber.context:type_name -> producer.TimberContext
	4, // 1: producer.Timber.content:type_name -> google.protobuf.Struct
	2, // 2: producer.TimberCollection.context:type_name -> producer.TimberContext
	0, // 3: producer.TimberCollection.items:type_name -> producer.Timber
	0, // 4: producer.Producer.Produce:input_type -> producer.Timber
	1, // 5: producer.Producer.ProduceBatch:input_type -> producer.TimberCollection
	3, // 6: producer.Producer.Produce:output_type -> producer.ProduceResult
	3, // 7: producer.Producer.ProduceBatch:output_type -> producer.ProduceResult
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_producer_producer_proto_init() }
func file_producer_producer_proto_init() {
	if File_producer_producer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_producer_producer_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Timber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_producer_producer_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TimberCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_producer_producer_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TimberContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_producer_producer_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProduceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_producer_producer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_producer_producer_proto_goTypes,
		DependencyIndexes: file_producer_producer_proto_depIdxs,
		MessageInfos:      file_producer_producer_proto_msgTypes,
	}.Build()
	File_producer_producer_proto = out.File
	file_producer_producer_proto_rawDesc = nil
	file_producer_producer_proto_goTypes = nil
	file_producer_producer_proto_depIdxs = nil
}
